<?xml version="1.0"?>
<!--
// This is Generated Code
// You Shall not modify this code as it may be overwritten
// Generated By Generative Objects 
-->
<!--
    Note: As an alternative to hand editing this file you can use the 
    web admin tool to configure settings for your application. Use
    the Website->Asp.Net Configuration option in Visual Studio.
    A full list of settings and comments can be found in 
    machine.config.comments usually located in 
    \Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<!-- Warning : In order to use this, you should install the Url Rewrite Module -->
<!-- http://blogs.iis.net/ruslany/archive/2008/09/11/url-rewrite-module-go-live-release.aspx -->
<configuration>
    <configSections>
        <!-- For LLBLGen -->
        <section name="outputLanguages" type="System.Configuration.NameValueSectionHandler, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
        <section name="logicLanguages" type="System.Configuration.NameValueSectionHandler, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
        <!-- End For LLBLGen -->

    </configSections>

    <connectionStrings>
        <add name="NorthwindConnection"
             connectionString="Data Source=localhost;Integrated Security=SSPI;Initial Catalog=Northwind;" />
    </connectionStrings>
    
    <system.web>
        <httpRuntime requestValidationMode="2.0" maxQueryStringLength="32768" maxUrlLength="65536" maxRequestLength="1048576" />
        <machineKey validationKey="D61B3C89CB33A2F1422FF158AFF7320E8DB8CB5CDA1742572A487D94018787EF42682B202B746511891C1BAF47F8D25C07F6C39A104696DB51F17C529AD3CABE"
                    decryptionKey="FBF50941F22D6A3B229EA593F24C41203DA6837F1122EF17" />
    </system.web>

    <appSettings>
        <add key="mySqlIncludeCatalogNameInObjectNames" value="true" />
        <add key="debugMode" value="false" />
        <add key="DatabaseName" value=""/>  <!-- No more necessary for PersistenceInfo -->
        <add key="Main.ConnectionString.SQL Server (SqlClient)" value="data source=.\DEVELOPMENT; initial catalog=Sandbox;integrated security=SSPI" />
        <add key="Version" value="10" />
        <!-- Flag used to serve minimified JS/CSS files or full ones -->
        <add key="IsInDebug" value="true" />
        <add key="ActivateClientLogging" value="false" />
        <add key="SqlServerDQECompatibilityLevel" value="2" />
        <!-- For LLBLGen -->
        <!-- Specification of the root folder where LLBLGen Pro will search for database driver assemblies. -->
        <!-- This path is always relative to the application folder. -->
        <add key="databaseDriversRootFolder" value="Drivers"/>
        <!-- Specification of the root folder where LLBLGen Pro will search for task performer assemblies. -->
        <!-- This path is always relative to the application folder. -->
        <add key="taskPerformersRootFolder" value="TaskPerformers"/>
        <!-- Specification of the root folder where LLBLGen Pro will search for plugin assemblies -->
        <!-- This path is always relative to the application folder. -->
        <add key="pluginsRootFolder" value="Plugins"/>
        <!-- Specification of the root folder where LLBLGen Pro will search for type converter assemblies. -->
        <!-- This path is always relative to the application folder. -->
        <add key="typeConvertersRootFolder" value="TypeConverters"/>
        <!-- Specification of the root folder of the framework definition files and related files-->
        <!-- This path is always relative to the application folder. -->
        <add key="frameworksRootFolder" value="Frameworks"/>
        <!-- Specification of the folder for the shared elements for all frameworks-->
        <!-- This path is always relative to the application folder. -->
        <add key="frameworksSharedFolder" value="Frameworks\Shared"/>
        <!-- Specification of the root folder for the .xsd files shipped with LLBLGen Pro for intellisense during XML editing-->
        <add key="xsdRootFolder" value="Xsd"/>
        <!-- Specification of the framework name for DDL SQL code generation cycles-->
        <add key="DDLSQLFrameworkName" value="DDL SQL"/>
        <!-- Specification of the language name for DDL SQL code generation cycles-->
        <add key="DDLSQLLanguageName" value="SQL"/>
        <!-- Specification of the platform name for DDL SQL code generation cycles-->
        <add key="DDLSQLPlatformName" value="RDBMS"/>
        <!-- Specification of the template group for Update DDL SQL code generation cycles-->
        <add key="updateDDLSQLTemplateGroup" value="Update DDL SQL"/>
        <!-- Specification of the template group for Create DDL SQL code generation cycles-->
        <add key="createDDLSQLTemplateGroup" value="Create DDL SQL"/>
        <!-- End For LLBLGen -->
        <add key="DefaultLlblgenProjectFilename" value="c:\projects\fenomen\GenerativeObjects\model\FenomenDesignerModel.llblgenproj"/>
        <add key="LlblgenStartupPath" value="C:\Program Files (x86)\Solutions Design\LLBLGen Pro v3.1"/>
        <!--
        <add key="Throttle" value="1500"/>
        -->
        <!-- CSV list of folders to which anonymous access is allowed -->
        <add key="AnonymousAccessFolders" value="Styles,Membership"/>
    </appSettings>

    <system.web>
        <!--
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
        -->
        <compilation debug="true" numRecompilesBeforeAppRestart="36567">
            <assemblies>
                <add assembly="System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
                <add assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
            </assemblies>
        </compilation>
        <!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
        -->

        <authentication mode="None" />

        <pages>
            <controls>
                <add tagPrefix="asp" namespace="System.Web.UI" assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
            </controls>
        </pages>
        <httpHandlers>
            <remove verb="*" path="*.asmx"/>
            <add verb="*" path="*.asmx" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
            <add verb="*" path="*_AppService.axd" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
            <add verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" validate="false"/>
        </httpHandlers>

        <!--      
            Set here a Default Custom Error Page, witch will trigger every uncatched errors in system.webserver.httpErrors
            Change the mode to RemoteOnly, for production deployment
            -->

    </system.web>
    
    <system.codedom>
        <compilers>
            <compiler language="c#;cs;csharp" extension=".cs" warningLevel="4" type="Microsoft.CSharp.CSharpCodeProvider, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
                <providerOption name="CompilerVersion" value="v3.5"/>
                <providerOption name="WarnAsError" value="false"/>
            </compiler>
        </compilers>
    </system.codedom>
    <!--
        The system.webServer section is required for running ASP.NET AJAX under Internet
        Information Services 7.0.  It is not necessary for previous version of IIS.
    -->
    <system.webServer>

        <!-- 
            CORS
            The following httpProtocol placeholder may be used to activate CORS using the following transform rule in your web.config.custom (within <system.webServer>)
            <system.webServer>
                <httpProtocol>
                    <customHeaders>
                        <add name="Access-Control-Allow-Origin" value="*" xdt:Transform="Insert"/>
                        <add name="Access-Control-Allow-Methods" value="GET,PUT,POST,DELETE,OPTIONS" xdt:Transform="Insert"/>
                        <add name="Access-Control-Allow-Headers" value="Content-Type,Authorization" xdt:Transform="Insert"/>
                    </customHeaders>
                </httpProtocol>
            </system.webServer>
        -->
        <httpProtocol>
            <customHeaders>
            </customHeaders>
        </httpProtocol>

        <httpErrors errorMode="Detailed" />
        <asp scriptErrorSentToBrowser="true"/>
        <!-- Define here the httpErrors for a specific http Code Status  -->

        <!-- Enable the Cache Server Side -->
        <caching enabled="true" enableKernelCache="true">
            <profiles>
                <clear/>
                <add extension=".js" policy="CacheUntilChange" kernelCachePolicy="CacheUntilChange" />
                <add extension=".css" policy="CacheUntilChange" kernelCachePolicy="CacheUntilChange" />
            </profiles>
        </caching>

        <validation validateIntegratedModeConfiguration="false"/>
        <modules>
            <add name="ScriptModule" preCondition="integratedMode" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
        </modules>
        <handlers>
            <remove name="WebServiceHandlerFactory-Integrated"/>
            <add name="ScriptHandlerFactory" verb="*" path="*.asmx" preCondition="integratedMode" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
            <add name="ScriptHandlerFactoryAppServices" verb="*" path="*_AppService.axd" preCondition="integratedMode" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
            <add name="ScriptResource" preCondition="integratedMode" verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
            <add verb="*" path="api/importcomponent/*" name="ImportComponentAPIServiceHandler" type="Sandbox.ServiceLayer.WebHandlers.JsonImportComponentServiceHandler"/>
            <add verb="*" path="dataset/api/importcomponent/*" name="ImportComponentDatasetAPIServiceHandler" type="Sandbox.ServiceLayer.WebHandlers.JsonImportComponentServiceHandler"/>
            <add verb="*" path="api/gofileuploader/*" name="GOFileUploaderAPIServiceHandler" type="Sandbox.ServiceLayer.WebHandlers.JsonGOFileUploaderServiceHandler"/>
            <add verb="*" path="dataset/api/gofileuploader/*" name="GOFileUploaderDatasetAPIServiceHandler" type="Sandbox.ServiceLayer.WebHandlers.JsonGOFileUploaderServiceHandler"/>
            <add verb="*" path="api/importexcel2worksheetscomponent/*" name="ImportExcel2WorksheetsComponentAPIServiceHandler" type="Sandbox.ServiceLayer.WebHandlers.JsonImportExcel2WorksheetsComponentServiceHandler"/>
            <add verb="*" path="dataset/api/importexcel2worksheetscomponent/*" name="ImportExcel2WorksheetsComponentDatasetAPIServiceHandler" type="Sandbox.ServiceLayer.WebHandlers.JsonImportExcel2WorksheetsComponentServiceHandler"/>
            <add verb="*" path="api/importexcel1worksheetcomponent/*" name="ImportExcel1WorksheetComponentAPIServiceHandler" type="Sandbox.ServiceLayer.WebHandlers.JsonImportExcel1WorksheetComponentServiceHandler"/>
            <add verb="*" path="dataset/api/importexcel1worksheetcomponent/*" name="ImportExcel1WorksheetComponentDatasetAPIServiceHandler" type="Sandbox.ServiceLayer.WebHandlers.JsonImportExcel1WorksheetComponentServiceHandler"/>
            <add verb="*" path="api/goreportshelper/*" name="GOReportsHelperAPIServiceHandler" type="Sandbox.ServiceLayer.WebHandlers.JsonGOReportsHelperServiceHandler"/>
            <add verb="*" path="dataset/api/goreportshelper/*" name="GOReportsHelperDatasetAPIServiceHandler" type="Sandbox.ServiceLayer.WebHandlers.JsonGOReportsHelperServiceHandler"/>
            <add verb="*" path="Notifications/*.json" name="JsonNotificationServiceHandler" type="Sandbox.ServiceLayer.WebHandlers.JsonNotificationServiceHandler" />
            <add verb="*" path="api/Metadata" name="MetaDataHandler" type="Sandbox.ServiceLayer.WebHandlers.MetaDataHandler" />
            <add verb="*" path="api/*" name="DataApiHandler" type="Sandbox.ServiceLayer.WebHandlers.DataApiHandler" />
            <add verb="*" path="dataset/api/*" name="DataSetDataApiHandler" type="Sandbox.ServiceLayer.WebHandlers.DataApiHandler" />
            <!-- Handle minimification / Obfuscation with ApplicationSettings.*js -->
            <add verb="*" path="Application/ApplicationSettings.*js" name="ApplicationSettingsHandler" type="Sandbox.ServiceLayer.WebHandlers.ApplicationSettingsHandler" />
            <add verb="*" path="Sandbox/" name="ViewsHandler" type="Sandbox.ServiceLayer.WebHandlers.ViewsHandler"/>
            <add verb="*" path="ConstructedViews/*" name="ConstructedViewsHandler" type="Sandbox.ServiceLayer.WebHandlers.ConstructedViewsHandler"/>
        </handlers>
        <httpCompression directory="%SystemDrive%\inetpub\temp\IIS Temporary Compressed Files" maxDiskSpaceUsage="100" doDiskSpaceLimiting="true" />
        <!-- Warning : In order to use this, you should install the Url Rewrite Module -->
        <!-- http://blogs.iis.net/ruslany/archive/2008/09/11/url-rewrite-module-go-live-release.aspx -->
        <rewrite>
            <rules>
                <remove name="Rewrite rule1 for RewriteMap" />

                <!--			Normal Mode: GORule1 + GORule3
                                Minimified Mode: GORule1Min + GORule3Min + GoRule1 + GORule3
                                Obfuscated Mode: GORule1Obf + GORule3Obf + GORule1Min + GORule3Min + GORule1 + GORule3
                -->

                <!-- Used to get minimified  + Obfuscated files -->
                <!--
                <rule name="GORule1Obf">
                    <match url="^([0-9]+)/(.+)(.(js))$"/>
                    <action type="Rewrite" url="{R:2}.go-obf.{R:4}"/>
                </rule>
                <rule name="GORule3Obf">
                    <match url="^(.+)/([0-9]+)/(.+)(.(js))$"/>
                    <action type="Rewrite" url="{R:1}/{R:3}.go-obf.{R:5}"/>
                </rule>
                -->

                <!-- Used to get minimified files -->
                <!--
                <rule name="GORule1MinObf">
                    <match url="^([0-9]+)/(.+)(.(js))$"/>
                    <action type="Rewrite" url="{R:2}.go-obf.{R:4}"/>
                </rule>
                <rule name="GORule3MinObf">
                    <match url="^(.+)/([0-9]+)/(.+)(.(js))$"/>
                    <action type="Rewrite" url="{R:1}/{R:3}.go-obf.{R:5}"/>
                </rule>

                <rule name="GORule1Min">
                    <match url="^([0-9]+)/(.+)(.(js|css))$"/>
                    <action type="Rewrite" url="{R:2}.go-min.{R:4}"/>
                </rule>
                <rule name="GORule3Min">
                    <match url="^(.+)/([0-9]+)/(.+)(.(js|css))$"/>
                    <action type="Rewrite" url="{R:1}/{R:3}.go-min.{R:5}"/>
                </rule>
                -->
                <!-- Used to match all kind of files -->
                <rule name="GORule1">
                    <match url="^([0-9]+)/((.+)(.((html|js|css|png|ico))))$" />
                    <action type="Rewrite" url="{R:2}" />
                </rule>
                <rule name="GORule2">
                    <match url="^(.+)/([0-9]+)/((.+)(.(html|js|css|png|ico)))$" />
                    <action type="Rewrite" url="{R:1}/{R:3}" />
                </rule>
            </rules>
        </rewrite>
        <security>
            <requestFiltering>
                <requestLimits maxQueryString="32768"/>
            </requestFiltering>
        </security>
        <staticContent>
            <!-- Customise this section via web.custom.config -->
        </staticContent>
    </system.webServer>
    <!-- For LLBLGen -->
    <outputLanguages>
        <add key="XML" value="LanguageDefinitions\SD.XML.xml"/>
        <add key="C#" value="LanguageDefinitions\SD.CSharp.xml"/>
        <add key="HTML" value="LanguageDefinitions\SD.HTML.xml"/>
        <add key="SQL" value="LanguageDefinitions\SD.SQL.xml"/>
        <add key="VB.NET" value="LanguageDefinitions\SD.VBDotNet.xml"/>
        <add key="TDL" value="LanguageDefinitions\SD.TDL.xml"/>
        <add key="QML" value="LanguageDefinitions\SD.QuickModel.xml"/>
    </outputLanguages>
    <logicLanguages>
        <add key="C#" value="LanguageDefinitions\SD.Logic.CSharp.xml"/>
        <add key="VB.NET" value="LanguageDefinitions\SD.Logic.VBDotNet.xml"/>
        <add key="TDL" value="LanguageDefinitions\SD.Logic.TDL.xml"/>
    </logicLanguages>

    <!-- Redirect requests for old Newtonsoft.Json to newer Newtonsoft.Json (helps with e.g. Azure SDK compatibility) -->
    <runtime>
        <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
            <dependentAssembly>
                <assemblyIdentity name="Newtonsoft.Json" culture="neutral" publicKeyToken="30ad4fe6b2a6aeed" />
                <bindingRedirect oldVersion="0.0.0.0-7.0.0.0" newVersion="8.0.0.0" />
            </dependentAssembly>
        </assemblyBinding>
    </runtime>

    <!-- Additional DbProviderFactory settings for ADO.NET providers which don't register themselves in the machine.config file. -->
    <!-- Adjust these settings if you want to use a different version of the providers specified below. Leave the 'invariant' names as-is. -->
    <system.data>
        <DbProviderFactories>
            <!-- Firebird -->
            <add name="Firebird Client Data Provider"
                 invariant="FirebirdSql.Data.FirebirdClient"
                 description=".Net Framework Data Provider for Firebird"
                 type="FirebirdSql.Data.FirebirdClient.FirebirdClientFactory, FirebirdSql.Data.FirebirdClient, Version=2.1.0.0, Culture=neutral, PublicKeyToken=3750abcc3150b00c"  />
            <!-- PostgreSql -->
            <add name="PostgreSql Client Data Provider"
                 invariant="Npgsql"
                 description=".Net Framework Data Provider for PostgreSql"
                 type="Npgsql.NpgsqlFactory, Npgsql, Version=2.0.4.0, Culture=neutral, PublicKeyToken=5d8b90d52f46fda7" />
        </DbProviderFactories>
    </system.data>
    <!-- End For LLBLGen -->
</configuration>
   
